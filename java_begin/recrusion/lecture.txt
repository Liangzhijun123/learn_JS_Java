Recursion:
-recursive algorithm can be easy but can be missing something in the Recursion

Iterative Algorithms:
-solving problems using sequential code, often with the sequential code wrapped in loop

Iterative factorial method:
-1! and 0! are both equal to 1

ex:
public static int factorialIterative(int n){
    int factorial =1;

    if(n > 1){
        for(int i -2; i <= n; I++)
        factorial - factorial * 1'
        
    return factorial;
    }
}

ex: if is n factorial
public static int factorialRecursive(int n){
    if(n == 1){
        return 1;
    } else if( n == 0){
        return 1;

    } else 
    return n * factorialRecrusive(n-1); // keep shhrinking the process in the inital call of the method
}

Recursive code:
if(base case test)
    return base case value
else
    recursive call using reduced problems
    return general solution